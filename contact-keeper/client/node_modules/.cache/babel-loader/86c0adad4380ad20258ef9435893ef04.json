{"ast":null,"code":"var _jsxFileName = \"D:\\\\Courses\\\\Javascript\\\\React\\\\contact-keeper\\\\client\\\\src\\\\components\\\\contacts\\\\ContactFilter.js\";\nimport React, { useContext, useRef, useEffect } from 'react';\nimport ContactContext from '../../context/contact/contactContext';\n\nconst ContactFilter = () => {\n  const contactContext = useContext(ContactContext);\n  const text = useRef('');\n  const clearFiltered = contactContext.clearFiltered,\n        filterContacts = contactContext.filterContacts,\n        filtered = contactContext.filtered;\n  useEffect(() => {\n    if (!filtered) {\n      text.current.value = '';\n    }\n  });\n\n  const onChange = e => {\n    if (text.current.value !== '') {\n      filterContacts(e.target.value);\n    } else {\n      clearFiltered();\n    }\n  };\n\n  return React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    ref: text,\n    type: \"text\",\n    name: \"filter\",\n    placeholder: \"Search Contacts...\",\n    onChange: onChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }));\n};\n\nexport default ContactFilter;","map":{"version":3,"sources":["D:/Courses/Javascript/React/contact-keeper/client/src/components/contacts/ContactFilter.js"],"names":["React","useContext","useRef","useEffect","ContactContext","ContactFilter","contactContext","text","clearFiltered","filterContacts","filtered","current","value","onChange","e","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,MAA5B,EAAoCC,SAApC,QAAqD,OAArD;AACA,OAAOC,cAAP,MAA2B,sCAA3B;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAC1B,QAAMC,cAAc,GAAGL,UAAU,CAACG,cAAD,CAAjC;AACA,QAAMG,IAAI,GAAGL,MAAM,CAAC,EAAD,CAAnB;AAF0B,QAIlBM,aAJkB,GAI0BF,cAJ1B,CAIlBE,aAJkB;AAAA,QAIHC,cAJG,GAI0BH,cAJ1B,CAIHG,cAJG;AAAA,QAIaC,QAJb,GAI0BJ,cAJ1B,CAIaI,QAJb;AAM1BP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAI,CAACO,QAAL,EAAe;AACbH,MAAAA,IAAI,CAACI,OAAL,CAAaC,KAAb,GAAqB,EAArB;AACD;AACF,GAJQ,CAAT;;AAMA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AACpB,QAAIP,IAAI,CAACI,OAAL,CAAaC,KAAb,KAAuB,EAA3B,EAA+B;AAC7BH,MAAAA,cAAc,CAACK,CAAC,CAACC,MAAF,CAASH,KAAV,CAAd;AACD,KAFD,MAEO;AACLJ,MAAAA,aAAa;AACd;AACF,GAND;;AAQA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,GAAG,EAAED,IADP;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,QAHP;AAIE,IAAA,WAAW,EAAC,oBAJd;AAKE,IAAA,QAAQ,EAAEM,QALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAWD,CA/BD;;AAiCA,eAAeR,aAAf","sourcesContent":["import React, { useContext, useRef, useEffect } from 'react';\r\nimport ContactContext from '../../context/contact/contactContext';\r\n\r\nconst ContactFilter = () => {\r\n  const contactContext = useContext(ContactContext);\r\n  const text = useRef('');\r\n\r\n  const { clearFiltered, filterContacts, filtered } = contactContext;\r\n\r\n  useEffect(() => {\r\n    if (!filtered) {\r\n      text.current.value = '';\r\n    }\r\n  });\r\n\r\n  const onChange = e => {\r\n    if (text.current.value !== '') {\r\n      filterContacts(e.target.value);\r\n    } else {\r\n      clearFiltered();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        ref={text}\r\n        type='text'\r\n        name='filter'\r\n        placeholder='Search Contacts...'\r\n        onChange={onChange}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactFilter;\r\n"]},"metadata":{},"sourceType":"module"}